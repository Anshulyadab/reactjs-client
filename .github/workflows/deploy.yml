name: Deploy to Vercel

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        npm ci
        cd client && npm ci
        
    - name: Build React app
      run: npm run build
      
    - name: Install Vercel CLI
      run: npm install --global vercel@latest
      
    - name: Pull Vercel Environment Information
      run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      
    - name: Build Project Artifacts
      run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      
    - name: Deploy Project Artifacts to Vercel
      run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
      env:
        VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        NEON_DATABASE_URL: ${{ secrets.NEON_DATABASE_URL }}
        
    - name: Comment PR with deployment URL
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const { data: comments } = await github.rest.issues.listComments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
          });
          
          const botComment = comments.find(comment => 
            comment.user.type === 'Bot' && comment.body.includes('Preview deployment')
          );
          
          if (botComment) {
            await github.rest.issues.updateComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: botComment.id,
              body: `ðŸš€ **Preview deployment ready!**
              
              **Deployment URL:** https://${{ secrets.VERCEL_PROJECT_ID }}-git-${{ github.head_ref }}-${{ secrets.VERCEL_ORG_ID }}.vercel.app
              
              **Status:** âœ… Successfully deployed
              **Commit:** \`${{ github.sha }}\`
              **Branch:** \`${{ github.head_ref }}\`
              
              ---
              *This deployment will be automatically updated when you push new commits to this branch.*`
            });
          } else {
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `ðŸš€ **Preview deployment ready!**
              
              **Deployment URL:** https://${{ secrets.VERCEL_PROJECT_ID }}-git-${{ github.head_ref }}-${{ secrets.VERCEL_ORG_ID }}.vercel.app
              
              **Status:** âœ… Successfully deployed
              **Commit:** \`${{ github.sha }}\`
              **Branch:** \`${{ github.head_ref }}\`
              
              ---
              *This deployment will be automatically updated when you push new commits to this branch.*`
            });
          }
